name: Build and deploy React SPA to Azure Web App - sugarlab-frontend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # 1. Baixa o código do repositório
      - uses: actions/checkout@v4

      # 2. Instala Node.js com cache para acelerar builds
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # 3. Instala dependências e gera o build (saída em dist/)
      - name: Install and Build
        working-directory: frontend
        run: |
          npm ci
          npm run build

      # 4. Faz upload apenas da pasta dist
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-dist
          path: frontend/dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      # 5. Baixa o artefato dist
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: react-dist
          path: dist

      # 6. Faz login no Azure
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_4268CDD0AE3C4C60A8494F158509B6E2 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_BE025CCA2B1949C195A878D3C2EE6C0D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_CBF05D33A74A4E848D823EFB882B8C0F }}

      - name: Mover arquivos do dist para raiz
        run: |
          mv dist/* .

      # 7. Publica a pasta dist para o App Service
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'sugarlab-frontend'
          slot-name: 'Production'
          package: .




# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - sugarlab-frontend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: npm install, build
        working-directory: frontend  
        run: |
          npm install
          npm run build --if-present

      - name: Copy nginx.conf
        run: cp frontend/nginx.conf frontend/dist/nginx.conf

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-dist
          path: ./frontend/dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: react-dist
          path: ./frontend/dist
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B9CBFE66D8254C659F688D4D8C3E674C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_499B4CD0A64D4D5E9DD410CFDD2E9CF1 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_017B8B659F554008B69CF64809DAFCDC }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'sugarlab-frontend'
          slot-name: 'Production'
          package: ./frontend/dist
          